TODO: figure out module refcount issues.

TODO: re-initialize bssid to zero when moving to SCAN mode.

Changes since -9:
   - change /proc/net/ device names (patch from Mike Hudson): 
     create /proc/net/wlan-device_name and /proc/net/ath-device-name
   - move around calls to proc_attach and stats_attach (patch from Mike Hudson)
   - add ic_reset function pointer to struct ieee80211com, initialize it and 
     use it (patch from Mike hudson)
   - switch to ASSOC state upon beacon miss (patch from Mike Hudson)
   - use end-of-linked-list marker in rx descriptor linked list, use new HAL for this
     (patch from Mike Hudson)
   - fix a bit of debugging output to use DPRINTF rather than printf (patch from 
     Mike Hudson)
   - remove calls to ath_hal_dumpeeprom, ath_hal_dumprfgain, ath_hal_dumpani since 
     these macros have been removed from the HAL (patch from Mike Hudson)
   - port skb room adjusting patch from cvs HEAD (me)
   - fix HAL_FATAL/RXORN conflict issues (me)

Changes since -8:
   - fix oops upon driver insertion: memset memory to zero in ath_node_alloc
   - add ieee80211_decap function and use it in ieee80211_input to convert the
     802.11 data frames into 802.3 frames for the Linux networking stack.
   - remove hard_header_len setting in ath_attach. This variable is automatically
     correctly set by ether_setup.
   - add error checking in ieee80211_input after call to ieee80211_decap.
   - remove a few useless comments.
   - goto bad upon errors in ieee80211_output.

Changes since -7:
   - remove ieee80211 watchdog call from ath_attach. We need to complete initialization
     of the driver first!

Changes since -6:
   - cleanup if_proc.c
   - remove dead msg_enable field from struct ieee80211_stats
   - add /proc/net/ath/debug proc entry for ath_pci kernel module.
   - net80211/ieee80211-mod.c: fix definition of MOD_ macros, change moduleref/unref
     function definitions, update function calls to these functions in if_ath.c, 
     handle reference error.
   - add rules to build the necessary .mod.{o|c} files automagically on 2.6.x kernels.
   - delete ieee80211 watchdog timer even if device is not running (this should fix oops 
     upon unload for a few users), restart timer in ath_init. XXX: maybe we don't need to
     start the timer in ath_attach ?

Changes since -5:
   - remove ieee80211com->ic_myaddr field, add ieee80211_get_address function
   - remove trans_start setting in ath_mgtstart since it is set in ath_txstart

Changes since -4:
   - move module refcount increment/decrement to ieee80211-mod.c, call it from
     ath_attach, add macro definition for kernels 2.6.
   - postfix version numbers with something
   - make sure ieee80211_watchdog is called from a timer from if_ath.c:ath_watchdog
     (we can't use the ratectl timer), destroy the timer correctly in ath_stop. 
   - fix debugging output: I had never tested it before.

issues:
   - I did not test sending data between two stations.
   - error/statistic reporting: There is a copy of the stat structure in
     ieee80211com but it really is not very useful since most of its fields are calculated
     in if_ath.c whenever needed. Maybe it would make sense to move the stat structure to
     ath_softc and provide inline functions similar to ieee80211_get_broadcast to report
     errors from the net80211 OS-independent code.
   - see XXXs below

-------------------------------------------------------------------------------------------
1) if_athvar.h
   - move ath_nodestat fields to ath_node structure whose first member is ieee80211_node.
   - add BSD-driver fields to this structure. Most notably, an_rx_hist array.
   - remove sc_bss_stat field from ath_stats. The content of this field is now stored in
     ieee80211com.ic_bss.
   - add debug fields in ath_debug.
2) if_ath_pci.c
   - add debug module parameter
3) if_ath.c
   - cast net_device to ieee80211com when calling a ieee80211 function or being called back
     by a ieee80211 function pointer.
   - add ath_open function to avoid ugly-looking cast.
   - re-implement _node_alloc, _node_free, _node_get_rssi, _node_copy using BSD code.
   - in ath_attach:
        - take over the initialization code removed from ieee80211_ifattach.
        - override function pointers after _ifattach is called (make sure to save the
          function pointers we want to chain up to).
        - initialize net_device->hard_header_len.
   - in ath_detach, do the symetric of ath_attach.
   - see XXX in ath_mgtstart: it looks to me the call to ath_tx_start misses a ref.
   - in _node_free, I think the BSD driver has a memory leak.
   - invoke the ieee80211 watchdog from the rate control timer.

-------------------------------------------------------------------------------------------
1) ieee80211_var.h
   - replace struct ifnet with struct net_device as first member in ieee80211com.
   - otherwise, replace struct ifnet with struct ieee80211com.
   - add debug definition constants.
2) ieee80211.h
    NO MODIFS
3) ieee80211.c
   - XXX SYSCTL is commented out: what is it ?
   - replace all references of struct ifnet to struct ieee80211com
   - replace all uses of ifp to ic.
   - move platform-specific init functions out of ieee80211_ifattach to the caller.
   - move BSD module code to ieee80211-mod.c and convert it to Linux module code.
4) ieee80211_node.h
   - replace all references of struct ifnet to struct ieee80211com
   - replace type of ni_refcnt from int to atomic_t
   - replace BSD atomic_ functions by Linux atomic_ functions.
5) ieee80211_node.c
   - replace all references of struct ifnet to struct ieee80211com
   - replace all uses of ifp to ic.
   - replace all BSD mtx_ functions by Linux equivalents
   - replace all tests for IFF_DEBUG to use of either ieee80211_debug directly or DPRINTF_IFF
6) ieee80211_proto.h
   - replace all references of struct ifnet to struct ieee80211com
   - replace all references of struct mbuf to struct sk_buff
7) ieee80211_proto.c
   - replace all references of struct ifnet to struct ieee80211com
   - replace all references of struct mbuf to struct sk_buff
   - remove references to ic_mgtq since you don't need it on Linux.
   - do not try to initialize ifp->hdrlen. initialize the equivalent field
     named hard_header_len in if_ath.c before calling ieee80211_ifattach.
   - replace all BSD mtx_ functions by Linux equivalents
   - replace accesses to if_broadcast with ieee80211_get_broadcast
   - XXX: what can you replace (*if_start) () with ?
8) ieee80211_crypto.c
   - replace all references of struct ifnet to struct ieee80211com
   - re-implement the _wep_crypt function. I don't see how it can be tested on 
     Linux though since the if_ath.c linux driver unsets the WEP bit before feeding
     it to the _input function and thus behaves as if hardware could always decrypt
     the data.
9) ieee80211_crypto.h
   - replace all references of struct ifnet to struct ieee80211com
10) ieee80211_input.c
   - replace all references of struct ifnet to struct ieee80211com
   - replace all references of struct mbuf to struct sk_buff
   - the ieee80211_input function could be made OS-independent if
     the caller was responsible for:
         - calling _wep_cryp on the input packet to decrypt it if it is a DATA frame.
         - feeding this packet to BPF
     and if the function delegated forwarding in the AP case to another OS-dependent
     function.
     The only things you'd need would be a pointer to the data buffer and the size of 
     the data buffer.
   - disable build of _decap since it is not used anymore since decryption is not done  
     here.
   - change signature of ieee80211_recv_mgmt to take only a data buffer pointer and a size
     rather than the platform-dependent sk_buff or mbuf.
11) ieee80211_output.c
   - replace all references of struct ifnet to struct ieee80211com
   - replace all references of struct mbuf to struct sk_buff
   - replace calls to (*ifp->if_start)(ifp);  with (*ic->ic_mgtstart) (ic, skb);
   - change signature of ieee80211_getmbuf to take only a packet length. The value of
     the other parameters were always the same so, they were useless.
   - add a bunch of XXXs for alignment issues. I am not sure how to fix it.

