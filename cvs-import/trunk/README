$Id$

Atheros Driver For Linux
=========================

* Copyright (c) 2002, 2003 Sam Leffler.  All rights reserved.

Read the file COPYRIGHT for the complete copyright.

This software contains a Linux kernel driver for Atheros-based
Wireless LAN devices.  The driver supports both station and AP modes
of operation.  The driver is actually a port of the BSD Atheros
driver and includes a port of the 802.11 link layer code originally
found in NetBSD.  You may/will also find other BSD-ish glue code.
As much as possible I've tried to make this driver a "native Linux"
driver that conforms to Linux style and operation but in some areas
of operation you will see elements of BSD design/operation.

The driver functions as a normal network device and uses the Wireless
Extensions API.  As such normal Linux tools can and should be used
with it.

There is only one driver included here; it supports miniPCI and Cardbus
devices.  The driver can be built as a module or linked into the kernel.

The driver depends on two other modules: wlan.o and ath_hal.o.

The wlan module contains the 802.11 state machine, protocol support,
and other glue code.  This code is derived from work that first appeared
in NetBSD and then FreeBSD.

The ath_hal module contains the Atheros Hardware Access Layer (HAL).
This code manages much of the chip-specific operation of the driver.
The HAL is provided in a binary-only form in order to comply with FCC
regulations.  The file fcc.pdf contains these regulations.  Because the
module is provided in a binary-only form it is marked "Proprietary"; this
means when you load it you will see messages that your system is now
"tainted".

If you wish to use this driver on a platform for which an ath_hal
module is not already provided please contact the author.  Note that
this is only necessary for new _architectures_; the HAL is not tied to
any specific version of Linux.


Compatibility
=============
Most testing has been done with kernel versions 2.4.20 and wireless
tools version 25 on x86 machines.  Expect some rough edges if you
deviate from that combo.  In particular the code does not compile
with 2.5 versions of the kernel and probably needs modifications.


Atheros Hardware
================
There are currently 3 generations of Atheros 802.11 wireless devices:

5210	supports 11a only
5211	supports both 11a and 11b
5212	supports 11a, 11b, and 11g

These parts have been incorporated in a variety of retail products
including cardbus cards from DLink, Linksys, Netgear, and Proxim; and
mini-pci cards from some of these same vendors.  In addition many
laptop vendors use Atheros mini-pci cards for their builtin wireless
support.  An (incomplete) list of products that use Atheros parts is:

Netgear WAG511		D-Link DWL-AG520	Linksys WPC55AG
Netgear WAB501		D-Link DWL-AG650	Linksys WMP55AG
			D-Link DWL-AB650	Linksys WPC51AB

In general, if a device is identified as ``11a only'' it is almost
certain to contain an Atheros 5210 part in it.  There are several a+b
combo parts but many retail products use the 5211.  Likewise for the
latest generation of a+b+g combo products.  When in doubt check the PCI
vendor id with a tool like lspci, the Atheros vendor id is 0x168c; e.g.

00:13.0 Ethernet controller: Unknown device 168c:0012 (rev 01)


Building the driver
===================
To build the driver at the top level edit Makefile.inc to set the
pathname to your Linux kernel distribution.  By default this is set to
/usr/src/linux.

If you are cross-compiling the driver for a different platform define
the CC, LD, and STRIP macros appropriately.  For example:

#CC=		/export/tools/bin/mips-linux-gcc
#LD=		/export/tools/bin/mips-linux-ld
#STRIP=		/export/tools/bin/mips-linux-strip

Once you've got Makefile.inc configured appropriately, do:

	make

This will generate three important files:

driver/ath_pci.o (driver for PCI/Cardbus devices),
ath_hal/ath_hal.o (Atheros HAL), and
wlan/wlan.o (802.11 support layer)

These files can be loaded with insmod or modprobe; e.g.

	insmod wlan/wlan.o
	insmod ath_hal/ath_hal.o
	insmod driver/ath_pci.o

(note you must load the wlan and ath_hal modules first as the driver
depends on them).  You can also try:

	make install

to install the drivers where they can be loaded automatically at boot.


Using the driver
================
The driver should support any Atheros-based cardbus or pci device.
Management uses the normal Linux tools such as ifconfig.  Support
is included for versions 12 and later of the Wireless Extensions
so tools like iwconfig should work too.

To use this software in ``station mode'' (i.e. as a client) just
bring the interface up and the driver will scan for all access
points in all supported frequency bands supported by the hardware.
Specifically for 5210-based devices scanning will happen in the
5Ghz (11a) range, for 5211-based devices scanning will happen over
both 2Ghz (11b) and 5GHz frequencies (11a).  For 5212-based devices
the driver will scan both 2Ghz and 5GHz ranges and also look for
11g devices in the 2Ghz range.  To restrict operation you can either
select a mode (e.g. 11b) using iwpriv or, more commonly, select the
AP based on SSID and/or channel.

To use this software in ``hostap mode'' you need to configure it
with iwconfig and you will probably want to lock the operating mode
to one of 11a, 11b, or 11g if you have a multi-mode card (if you
do not lock the mode then the driver will select a mode for you;
usually 11a).  Otherwise you will need to configure the system to
bridge frames to a wired LAN or similar.

NOTE: adhoc mode is presently untested and may not work (send fixes).

Wireless tools cribsheet:

iwlist ath0 scan		list the AP's the driver has scanned
iwconfig ath0 essid "foo"	set the ssid to foo
iwpriv ath0 mode 1		lock operation to 11a only
iwpriv ath0 mode 2		lock operation to 11b only
iwpriv ath0 mode 3		lock operation to 11g only
iwpriv ath0 mode 0		autoselect from 11a/b/g (default)

There are some debugging mechanisms for the curious/masochistic:

echo 1 > /proc/sys/net/ath/debug	enable console msgs from the driver
echo 1 > /proc/net/wlan0/debug		enable console msgs from the wlan module
echo hal > /proc/sys/net/ath/dump	dump h/w register state to the console


Security/Crpto Support
======================
The driver supports fixed/shared key WEP using the hardware.  Newer
Atheros hardware is capable of much more (e.g. AES, TKIP and Michael)
but that work is not yet available.

This distribution does not include support for 802.1x authentication
or (obviously) WPA.  Support for .1x should be possible using
existing tools such as xsupplicant but this has not been tried.
Work is planned to provide ``native'' .1x and WPA support.


Known Problems
==============
[All these problems are to be fixed in future revisions.]

0. The driver uses the BSD queue.h macros for managing various data
   structures.  It has been pointed out that this may conflict with the
   equivalent Linux definitions in list.h potentially causing problems
   in future versions of Linux.  The use of BSD macrs will be removed
   in a future revision.

1. Roaming mode is broken.  If you lose your access point by going out
   of range the driver does not automatically re-associate.
2. Adhoc mode is untested and possibly/probably broken.
3. Performance in lossy environments is suboptimal.  The algorithm used to
   select the rate for transmitted packes is very simplistic.  There is no
   software retransmit; only hardware retransmit is used.  Contributors are
   encouraged to replace the existing rate control algorithm with a better
   one (hint: all the information needed is available in the driver).
4. 11g support is little tested and may have interoperability problems.
   The software is known to function with an Atheros 11g access point but
   interoperability may be problematic until vendors update firmware in
   existing 11g products.  If you encounter problems using an 11g access
   point you should be able to workaround incompatibilities by locking the
   driver to 11b mode (iwpriv mode 2).  Alternatively, most 11g compatibility
   issues are in the 802.11 layer and you may be able to workaround issues
   by modifying the wlan module.
5. General performance is suboptimal. The Atheros hardware is known to be
   capable of transfer rates of 23-24 Mb/s (or more) in 11a and 11g modes
   using their NDIS (aka Windows) driver.  Results with this driver are
   mixed and seem to vary significantly based on the tool used to measure
   performance.  Specifically netperf seems to perform very poorly while
   the bw_tcp program from lmbench yield ok results (~21 Mb/s "uplink"
   from a station with a 5212 card in it to a wired host on the same LAN
   as the AP--under 11a).
6. It has been observed that getting a DHCP address sometimes requires
   multiple tries.  This seems to happen only with 5211 and 5212 parts and
   mostly in a noisy environment (i.e. one where many AP's are found).
   This problem is specific to the driver and not the hardware and is
   believed to be due to not receiving the broadcast frame from the DHCP
   server.  Forcing the DHCP server to use a unicast response causes this
   problem to go away (the guess is that the unicast frame is retransmitted
   by the AP while the broadcast frame is not).
7. The driver does not fully enable power-save opertion of the chip;
   consequently power use is suboptimal.
8. Turbo mode is untested.


Acknowledgements
================
This work could not have been done without the support of Atheros
and in particular the efforts of Greg Chesson.  Comments from David
Miller were helpful in cleaning up some of the rough edges in the driver.


Feedback and Contributions
==========================
This project is hosted at http://madwifi.sourceforge.  Fixes and
enhancements are encouraged.  Please send all bug reports about this
driver to:

	madwifi-bugs@sourceforge.net

When sending a problem report be sure to include the version of the
driver and the part identification the driver prints to the console when
the module is loaded.  For example,

ath_hal: 0.8.2.0 (Sam Leffler <sam@errno.com>)
wlan: 0.7.0.0 (Sam Leffler <sam@errno.com>)
ath_pci: 0.8.2.0 (Sam Leffler <sam@errno.com>)
PCI: Found IRQ 11 for device 00:13.0
ath0: 11a rates: 6Mbps 9Mbps 12Mbps 18Mbps 24Mbps 36Mbps 48Mbps 54Mbps
ath0: 11b rates: 1Mbps 2Mbps 5.5Mbps 11Mbps
ath0: 802.11 address: 00:05:5d:6f:99:5f
ath0: Atheros 5211: mem=0xfebf0000, irq=11

This says the HAL module is version 0.8.2, the wlan module is version
0.7, the driver is version 0.8.2 and the hardware uses an Atheros
5211 chip (which supports 11a and 11b modes).

We will try to respond in a timely manner but understand this software
is provided as-is; i.e. with no promise of support.
