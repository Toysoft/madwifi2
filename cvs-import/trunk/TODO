HIGH PRIO:
==========
- allow sending of management packets in other states than IEEE80211_S_RUN
  (e.g. PROBE_REQUESTS in IEEE80211_S_SCAN state)
- check locking (especially the macros in ieee80211_linux.h)
    - too strict locking -> loose performance
    - too soft -> oops
- send multicast / broadcast frames with highest possible basic rate
    -  allow user configuration of basic rates
- IBSS merging, sychronization and beaconing
- implement "right" iwconfig ath0 key open / restricted behaviour
    - authentication mode open / shared key
    - accept unencrypted frames
- check if private crypto tkip implementation works for cards without hardware 
  crypto support (SWMIC, SWCRYPT).
- duration in 802.11 frames is always 0
- when a wrong WEP key is configured, the hardware decryption does not fail
  but results in bogus packets (often "sap" packets in tcpdump)
    - cause HAL_RXERR_DECRYPT is ignored
- bandwidth with 2 cards (one in, one out) is only 1/2 of possible rate
    - may be a locking problem
- correct fix for !IEEE80211_ADDR_EQ(wh->i_addr2, ni->ni_bssid) in 
  ieee80211_input.c (line 1986). it's disabled now because it breaks
  re-association
- report both RSN and WPA IEs in scan results for wpa_supplicant
    - at the moment RSN is preferred over WPA if both are present


LOW PRIO:
========
- define commonly used macros global
- cleanup code
- remove redundant definitions which have been copied from FreeBSD
    - e.g.: struct ether_header
- consistent configuration either thru sysctl or iwpriv commands
    - i'd suggest iwpriv (br1)
- antenna reconfiguration in ad-hoc mode does not affect beacons
  if it is done after the beacon is set up (the IBSS is started)


LONG TERM:
==========
- integration with the upcoming linux ieee80211 stack
- inclusion into linux kernel


IDEAS:
======
- generate a Configure script to create a Makefile fitting the build environment
- write a userspace tool to control all the things wireless_tools do but
  furthermore also things which are not supported by them
    - e.g.: wme + parameters, beacon interval, ack/cts timeouts...

