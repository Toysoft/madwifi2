
Introduction:

Since regulatory domain control is an implicit restriction on ieee80211
hardware the kernel should keep regulatory domain *structures* in the kernel, 
as well as a the currently used regulatory domain to indicate to drivers
the allowable list of allowed channels with their attached restrictions.
This will allow for a central definition of the current regulatory domain and
channel list definitions for both FullMAC and SoftMAC drivers. The few 
common regulatory domains (FCC, ETSI, MKK, France, Spain) can be made 
available in kernel via configuration while keeping at minimum a world 
compliant regulatory domain (almost impossible to define but we'll try). 
Updates to the current regulatory domain should be provided through userspace
through nl80211 to provide full flexibility and customization. Eventually
solidifying this architecture can pave the way for definition of more 
involved and detailed restrictions for 802.11d Country Information Element
parsing and for Software Defined Radios.

Pre-Phase-I: (pre-kernel integration)

* integrate ieee80211_regdomains in cfg80211/nl80211:
	- define a central wirelesss regulatory domain all devices should 
	  adhere to, export it (cfg80211). This can go in net/wireless/core.c.
	- nl80211 NL80211_CMD_SET_REGDOMAIN nl80211_set_regdomain():
		set wireless (cfg80211) regulatory domain
	- nl80211 NL80211_CMD_GET_REGDOMAIN nl80211_get_regdomain_by_country():
		set wireless (cfg80211) regulatory 
		domain by ISO-3166-1 alpha2 country code
	- iso3166_to_reg(): get regulatory domain for given 
		ISO-3166-1 alpha 2 country code. Keep in mind
		802.11d Country Information Element uses ISO-3166-1 alpha2
		country codes as well.
* add a routine to obtain a list of valid channels drivers can use
* add a device-stack --> regdomain map for ath5k
* add a device-stack --> regdomain map for zd1211rw
* review regulatory domain definitions, and confirm they are accurate

Phase I

* patch other drivers to start using the central regulatory domain agent
  to obtain a list of valid channels. We can start with mac80211 drivers

Phase II

* Add 802.11d support

* make Network Manager ieee80211_regdomains aware, let it update the 
  currently known regulatory domains or just simple add the desired one.
  This shall be done via nl80211

	- add_regdomain() - should update cfg80211's regdomain
	- remove_regdomain() - pretty obvious
	- etc...

Phase III

* Hookup ieee80211_regdomains and cfg80211 to frequency broker:

http://linuxwireless.org/en/developers/FrequencyBroker


